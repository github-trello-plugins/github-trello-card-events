{
  "root": true,
  "plugins": ["prettier", "promise"],
  "extends": ["airbnb-base", "prettier"],
  "env": {
    "node": true
  },
  "parserOptions": {
    "sourceType": "script"
  },
  "rules": {
    "prettier/prettier": [
      "error",
      {},
      {
        "usePrettierrc": true
      }
    ],
    "curly": ["error", "all"],
    "callback-return": ["error", ["callback", "cb", "next", "done"]],
    "class-methods-use-this": "off",
    "consistent-return": "off",
    "handle-callback-err": ["error", "^.*err"],
    "new-cap": "off",
    "no-console": "off",
    "no-else-return": "error",
    "no-eq-null": "off",
    "no-global-assign": "error",
    "no-loop-func": "off",
    "no-lone-blocks": "error",
    "no-negated-condition": "error",
    "no-shadow": "off",
    "no-template-curly-in-string": "error",
    "no-undef": "error",
    "no-underscore-dangle": "off",
    "no-unsafe-negation": "error",
    "no-use-before-define": ["error", "nofunc"],
    "no-useless-rename": "error",
    "strict": "error",
    "no-empty": "error",
    "no-empty-function": "error",
    "yoda": "error",

    "promise/always-return": "error",
    "promise/always-catch": "off",
    "promise/catch-or-return": ["error", { "allowThen": true }],
    "promise/no-native": "off",
    "promise/param-names": "error",

    // Override airbnb
    "eqeqeq": ["error", "smart"],
    "func-names": "error",
    "id-length": [
      "error",
      { "exceptions": ["$", "_", "e", "i", "j", "k", "q", "x", "y"] }
    ],
    "no-param-reassign": "off", // Work toward enforcing this rule
    "radix": "off",
    "spaced-comment": "off",
    "no-continue": "off",
    "no-plusplus": "off",
    "no-prototype-builtins": "off",
    "no-restricted-syntax": [
      "error",
      "DebuggerStatement",
      "LabeledStatement",
      "WithStatement"
    ],
    "no-restricted-properties": [
      "error",
      {
        "object": "arguments",
        "property": "callee",
        "message": "arguments.callee is deprecated"
      },
      {
        "property": "__defineGetter__",
        "message": "Please use Object.defineProperty instead."
      },
      {
        "property": "__defineSetter__",
        "message": "Please use Object.defineProperty instead."
      }
    ],
    "no-useless-escape": "off",
    // "prefer-arrow-callback": ["error", { "allowNamedFunctions": true }],
    "prefer-spread": "error"
  }
}
